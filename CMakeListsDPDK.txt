cmake_minimum_required(VERSION 2.6)

FILE(STRINGS ${DPDK_PATH}/build/.config RTE_CONFIG REGEX "^CONFIG_RTE_MACHINE")
STRING(REGEX MATCHALL "CONFIG_RTE_MACHINE=\"([^\"]*)\"" RTE_MACHINE ${RTE_CONFIG})
SET(RTE_MACHINE ${CMAKE_MATCH_1})

EXECUTE_PROCESS(COMMAND sh -c "${CMAKE_C_COMPILER} -march=${RTE_MACHINE} -dM -E - < /dev/null" OUTPUT_VARIABLE MACHINE_FLAGS)

IF(${MACHINE_FLAGS} MATCHES "__SSE__")
LIST(APPEND RTE_CPU_FLAGS SSE)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__SSE2__")
LIST(APPEND RTE_CPU_FLAGS SSE2)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__SSE3__")
LIST(APPEND RTE_CPU_FLAGS SSE3)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__SSSE3__")
LIST(APPEND RTE_CPU_FLAGS SSSE3)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__SSE4_1__")
LIST(APPEND RTE_CPU_FLAGS SSE4_1)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__SSE4_2__")
LIST(APPEND RTE_CPU_FLAGS SSE4_2)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__AES__")
LIST(APPEND RTE_CPU_FLAGS AES)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__PCLMUL__")
LIST(APPEND RTE_CPU_FLAGS PCLMULQDQ)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__AVX__")
LIST(APPEND RTE_CPU_FLAGS AVX)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__RDRND__")
LIST(APPEND RTE_CPU_FLAGS RDRAND)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__FSGSBASE__")
LIST(APPEND RTE_CPU_FLAGS FSGSBASE)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__F16C__")
LIST(APPEND RTE_CPU_FLAGS F16C)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__AVX2__")
LIST(APPEND RTE_CPU_FLAGS AVX2)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__PPC64__")
LIST(APPEND RTE_CPU_FLAGS PPC64)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__PPC32__")
LIST(APPEND RTE_CPU_FLAGS PPC32)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__vector")
LIST(APPEND RTE_CPU_FLAGS ALTIVEC)
ENDIF()

IF(${MACHINE_FLAGS} MATCHES "__builtin_vsx_xvnmaddadp")
LIST(APPEND RTE_CPU_FLAGS VSX)
ENDIF()

FOREACH(FLAG ${RTE_CPU_FLAGS})
ADD_DEFINITIONS("-DRTE_MACHINE_CPUFLAG_${FLAG}")
LIST(APPEND RTE_COMPILE_FLAGS "RTE_CPUFLAG_${FLAG}")
ENDFOREACH()

STRING(REPLACE ";" "," COMPILE_FLAGS "${RTE_COMPILE_FLAGS}")
ADD_DEFINITIONS("-DRTE_COMPILE_TIME_CPUFLAGS=${COMPILE_FLAGS}")

LIST(APPEND WERROR_FLAGS -W -Wall -Wstrict-prototypes -Wmissing-prototypes)
LIST(APPEND WERROR_FLAGS -Wmissing-declarations -Wold-style-definition -Wpointer-arith)
LIST(APPEND WERROR_FLAGS -Wcast-align -Wnested-externs -Wcast-qual)
LIST(APPEND WERROR_FLAGS -Wformat-nonliteral -Wformat-security)
LIST(APPEND WERROR_FLAGS -Wundef -Wwrite-strings)
#LIST(APPEND WERROR_FLAGS -Werror)

INCLUDE_DIRECTORIES(${DPDK_PATH}/build/include ${CMAKE_CURRENT_SOURCE_DIR})
LINK_DIRECTORIES(${DPDK_PATH}/build/lib)

# For delta-x with ro root
#INCLUDE_DIRECTORIES(${URCU_PATH})
#LINK_DIRECTORIES(${URCU_PATH}/.libs)

ADD_DEFINITIONS(-march=${RTE_MACHINE} ${WERROR_FLAGS})
#ADD_DEFINITIONS(-march=${RTE_MACHINE})
#ADD_DEFINITIONS(-D_DEBUG -g2)
ADD_DEFINITIONS(-D_GNU_SOURCE -D_LGPL_SOURCE -DURCU_INLINE_SMALL_FUNCTIONS)

SET (CMAKE_C_FLAGS_DEBUG "-g2 -O0 -Wall -march=${RTE_MACHINE} -D_DEBUG -fdata-sections -ffunction-sections")
SET (CMAKE_C_FLAGS_RELEASE "-s -O3 -Wall -DNDEBUG -march=${RTE_MACHINE} -DPRODUCTION=1")
SET (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -flto")
SET (CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -fprofile-generate")
#SET (CMAKE_C_FLAGS_RELWITHDEBINFO "-g2 -O2 -Wall -D_DEBUG -march=${RTE_MACHINE}")
